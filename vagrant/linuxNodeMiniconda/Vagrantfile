# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/xenial64"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = false

  config.vm.provider "virtualbox" do |vb|
    # To remove an existing VM
    # Cf.: https://stackoverflow.com/a/44540290/1264920
    # `VBoxManage list vms | awk '{print $2;}' | xargs -I vmid VBoxManage unregistervm --delete vmid`
    vb.name = "node_miniconda_vm"
    vb.linked_clone = true
    # Display the VirtualBox GUI when booting the machine
    vb.gui = false
    # Customize the amount of memory on the VM:
    # to check the number of CPUs `cat /proc/meminfo`
    vb.memory = 2048
    # to check the number of CPUs `cat /proc/cpuinfo`
    vb.cpus = 2
  end

  # http://docs.ansible.com/ansible/latest/scenario_guides/guide_vagrant.html
  # Equivalent to running this command:
  # ansible-playbook --private-key .vagrant/machines/default/virtualbox/private_key -u vagrant -i .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory -vvvv vm-apache-spark-setup.yml
  config.vm.provision "ansible" do |ansible|
    ansible.verbose = "v" # "vvvv"
    ansible.playbook = "node-miniconda-vm-setup.yml"
  end
end
